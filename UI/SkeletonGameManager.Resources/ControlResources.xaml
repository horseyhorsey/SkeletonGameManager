<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

    <Style x:Key="TextBox_Rounded" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                CornerRadius="8"
                                >
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#region TAB STYLES -->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F0F0F0" Offset="0.0"/>
        <GradientStop Color="#E5E5E5" Offset="1.0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECF4FC" Offset="0.0"/>
        <GradientStop Color="#DCECFC" Offset="1.0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>

    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0"                                    
                                    >
                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0"
                                        Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"
                                        CornerRadius="5,5,0,0"
                                        />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="5,5,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="5,5,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="5,5,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="5,5,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->        

    <!--#region Sequence Brushes-->
    <SolidColorBrush x:Key="Brush_ComboLayer" Color="LightCoral"/>
    <SolidColorBrush x:Key="Brush_GroupLayer" Color="Green"/>
    <SolidColorBrush x:Key="Brush_HighScores" Color="OrangeRed"/>
    <SolidColorBrush x:Key="Brush_LastScores" Color="Red"/>
    <SolidColorBrush x:Key="Brush_MarkupLayer" Color="Navy"/>
    <SolidColorBrush x:Key="Brush_MoveLayer" Color="LightBlue"/>
    <SolidColorBrush x:Key="Brush_PanningLayer" Color="Blue"/>
    <SolidColorBrush x:Key="Brush_RandomText" Color="SandyBrown"/>
    <SolidColorBrush x:Key="Brush_ScriptedText" Color="SandyBrown"/>
    <SolidColorBrush x:Key="Brush_TextLayer" Color="SandyBrown"/>
    <SolidColorBrush x:Key="Brush_AnimLayer" Color="BlueViolet"/>
    <!--#endregion-->

    <ControlTemplate x:Key="ToolTips" TargetType="ToolTip">
        <Border BorderThickness="2" BorderBrush="DarkSlateGray">
            <Grid MaxWidth="250" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Rectangle Fill="{TemplateBinding Background}" Height="20" Width="250"/>
                <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" Grid.Row="1"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <!--#region SEQUENCE LABLE STYLE-->
    <Style x:Key="SequenceLabelStyle" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimationSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource Brush_AnimLayer}"/>
        <Setter Property="Content" Value="A"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqAnimation}" Background="{StaticResource Brush_PanningLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupLayerSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_GroupLayer}"/>
        <Setter Property="Content" Value="G"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqGroupLayer}" Background="{StaticResource Brush_GroupLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LastScoresSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_LastScores}"/>
        <Setter Property="Content" Value="LS"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqLastScores}" Background="{StaticResource Brush_LastScores}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_ComboLayer}"/>
        <Setter Property="Content" Value="C"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqCombo}" Background="{StaticResource Brush_ComboLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MarkupLayerSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_MarkupLayer}"/>
        <Setter Property="Content" Value="MU"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqMarkupLayer}" Background="{StaticResource Brush_MarkupLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScriptedTextSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_ScriptedText}"/>
        <Setter Property="Content" Value="ST"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqScriptedText}" Background="{StaticResource Brush_GroupLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextLayerSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_TextLayer}"/>
        <Setter Property="Content" Value="T"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqTextLayer}" Background="{StaticResource Brush_TextLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RandomTextSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_RandomText}"/>
        <Setter Property="Content" Value="RT"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqRandomText}" Background="{StaticResource Brush_RandomText}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PanningLayerSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_PanningLayer}"/>
        <Setter Property="Content" Value="P"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqPanningLayer}" Background="{StaticResource Brush_PanningLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoveLayerSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_MoveLayer}"/>
        <Setter Property="Content" Value="M"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqMoveLayer}" Background="{StaticResource Brush_MoveLayer}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HighScoresSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_HighScores}"/>
        <Setter Property="Content" Value="HS"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqHighScores}" Background="{StaticResource Brush_HighScores}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CreditsSequenceStyle" BasedOn="{StaticResource SequenceLabelStyle}" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource Brush_HighScores}"/>
        <Setter Property="Content" Value="HS"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Template="{StaticResource ToolTips}" Content="{StaticResource Tip_SeqCredits}" Background="{StaticResource Brush_ScriptedText}"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--SAVE BUTTON-->
    <Style x:Key="StyleSaveButton" TargetType="Button">
        <Setter Property="Command" Value="{Binding SaveCommand}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Content" Value="{DynamicResource Path_Save}"/>
        <Setter Property="Margin" Value="15"/>
    </Style>
</ResourceDictionary>